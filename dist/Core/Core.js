import{AuthRepository,DatabaseRepository,DonutRepository,LikesRepository,StorageRepository,SpecialsRepository,MessagesRepository,NotificationsRepository,StatEventsRepository,StatsRepository,StreamingRepository,UsersRepository,UtilsRepository,WidgetsRepository,GiftsRepository,DownloadedGamesRepository,AccountRepository,StatusRepository,WallRepository}from"../repositories";const notImplemented=()=>{throw new Error("Unable to call repository method due to Core was not initialized")};export class Core{constructor(){this.account=new AccountRepository(notImplemented),this.auth=new AuthRepository(notImplemented),this.database=new DatabaseRepository(notImplemented),this.donut=new DonutRepository(notImplemented),this.downloadedGames=new DownloadedGamesRepository(notImplemented),this.gifts=new GiftsRepository(notImplemented),this.likes=new LikesRepository(notImplemented),this.messages=new MessagesRepository(notImplemented),this.notifications=new NotificationsRepository(notImplemented),this.specials=new SpecialsRepository(notImplemented),this.statEvents=new StatEventsRepository(notImplemented),this.stats=new StatsRepository(notImplemented),this.status=new StatusRepository(notImplemented),this.storage=new StorageRepository(notImplemented),this.streaming=new StreamingRepository(notImplemented),this.users=new UsersRepository(notImplemented),this.wall=new WallRepository(notImplemented),this.utils=new UtilsRepository(notImplemented),this.widgets=new WidgetsRepository(notImplemented)}init(t){this.account=new AccountRepository(t),this.auth=new AuthRepository(t),this.database=new DatabaseRepository(t),this.donut=new DonutRepository(t),this.downloadedGames=new DownloadedGamesRepository(t),this.gifts=new GiftsRepository(t),this.likes=new LikesRepository(t),this.messages=new MessagesRepository(t),this.notifications=new NotificationsRepository(t),this.specials=new SpecialsRepository(t),this.statEvents=new StatEventsRepository(t),this.stats=new StatsRepository(t),this.status=new StatusRepository(t),this.storage=new StorageRepository(t),this.streaming=new StreamingRepository(t),this.users=new UsersRepository(t),this.wall=new WallRepository(t),this.utils=new UtilsRepository(t),this.widgets=new WidgetsRepository(t)}addRepository(t,e,s){return Object.defineProperty(this,t,{value:new e(s)}),this}}