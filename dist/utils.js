"use strict";function createRecursiveKeysFormatter(e){var o=function(t){return null===t?null:Array.isArray(t)?t.map(o):"object"==typeof t?Object.keys(t).reduce(function(r,a){return r[e(a)]=o(t[a]),r},{}):t};return o}function toSnakeCase(e){return e.replace(/[A-Z]/g,function(e){return"_"+e.toLowerCase()})}function toCamelCase(e){return e.replace(/_./g,function(e){return e.slice(1).toUpperCase()})}function toPseudoBoolean(e){return e?1:0}function formatOptionalBoolean(e){return void 0===e?void 0:"boolean"==typeof e?toPseudoBoolean(e):e}function formatOptionalArray(e){return void 0===e?e:e.join(",")}function isNonNullObject(e){return"object"==typeof e&&null!==e}Object.defineProperty(exports,"__esModule",{value:!0}),exports.isNonNullObject=exports.formatOptionalArray=exports.formatOptionalBoolean=exports.toPseudoBoolean=exports.recursiveToCamelCase=exports.toCamelCase=exports.recursiveToSnakeCase=exports.toSnakeCase=void 0,exports.toSnakeCase=toSnakeCase,exports.recursiveToSnakeCase=createRecursiveKeysFormatter(toSnakeCase),exports.toCamelCase=toCamelCase,exports.recursiveToCamelCase=createRecursiveKeysFormatter(toCamelCase),exports.toPseudoBoolean=toPseudoBoolean,exports.formatOptionalBoolean=formatOptionalBoolean,exports.formatOptionalArray=formatOptionalArray,exports.isNonNullObject=isNonNullObject;